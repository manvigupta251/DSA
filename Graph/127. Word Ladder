class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string> st(wordList.begin(), wordList.end());

        queue<pair<string, int>> q;

        q.push({beginWord, 1});

        while(!q.empty()){
            auto it = q.front();
            q.pop();
            string begin = it.first;
            int len = it.second;

            if(begin == endWord) return len;

            for(int i = 0; i<begin.size(); i++){
                char ch = begin[i];
                for(char cha = 'a'; cha <= 'z'; cha++){
                    begin[i] = cha;
                    if(st.find(begin) != st.end()){
                        q.push({begin, len+1});
                        st.erase(begin);
                    }
                }
                begin[i] = ch;
            }
        }
        return 0;
    }
};
