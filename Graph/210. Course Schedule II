class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        int n = numCourses;
        vector<int> adjList[n];
        vector<int> indegree(numCourses, 0);
        for(auto it: prerequisites){
            int a = it[0];
            int b = it[1];
            adjList[b].push_back(a);
            indegree[a]++;
        }
        queue<int> q;
        vector<int> topo;
        for(int i = 0; i<indegree.size(); i++){
            if(indegree[i] == 0) q.push(i);
        }
        while(!q.empty()){
            int node = q.front();
            topo.push_back(node);
            q.pop();
            for(auto it: adjList[node]){
                indegree[it]--;
                if(indegree[it] == 0){
                    q.push(it);
                }
            }
        }
        if(topo.size()==numCourses){
            return topo;
        }
        return {};
    }
};

