/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */


class Solution {
public:
    map<TreeNode*, int> mp;

    int rob(TreeNode* root) {
        //now memoise -> as we know dp array ni ban skti islie hum map banaenge
        if(!root) return 0;
        
        if(mp.find(root) != mp.end()) return mp[root];
        //take
        int take = root->val;
        //agr lia toh root kavalue add plus take grandchildren
        if(root->left){
            take += rob(root->left->left);
            take += rob(root->left->right);
        }
        if(root->right){
            take += rob(root->right->left);
            take += rob(root->right->right);
        }

        //not take
        int nottake = rob(root->left) + rob(root->right);

        return mp[root] = max(take, nottake);
    }
};
