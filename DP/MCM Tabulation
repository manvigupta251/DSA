class Solution {
  public:
    vector<vector<int>> dp;
  
    int matrixMultiplication(vector<int> &arr) {
        //now we need to check for every partition
        //1->n-1 k -> i -> j-1 cause single matrix toh chodni padegi
        //hum do partition karre woh el further aagebadhega
        int n = arr.size();
        dp.resize(n, vector<int>(n, 0));
        
        //sbse pehle base case i == j ie matrix i==j sbko 0
        //pr as humari dp puri zero hain so need
       
        //rec rel -> partition-> i-j ie 1 - N-1 
        for(int i = n-1; i>=1; i--){
            for(int j = i+1; j<n; j++){
                 int mini = INT_MAX;
                for(int k = i; k<j; k++){
                    int solution = arr[i-1] * arr[k] * arr[j] + dp[i][k] + dp[k+1][j];
                    mini = min(mini, solution);
                }
                dp[i][j] = mini;
            }
        }
        return dp[1][n-1];
    }
};
