APPROACH 1:

class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        TreeNode* curr = root;
        TreeNode* newNode = new TreeNode(val);

        if(!root) return newNode;

        while(curr != NULL){
            if(curr->val > val){
                if(curr->left) curr = curr->left;
                else{ 
                    curr->left = newNode;
                    break;
                }
            }
            else if(curr->val < val){
                if(curr->right) curr = curr->right;
                else{
                    curr->right = newNode;
                    break;
                }
            }
        }
        return root;
    }
};

APPROACH 2:

class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        if(root==NULL) return new TreeNode(val);
        if(root->val > val) root->left = insertIntoBST(root->left, val);
        else  root->right = insertIntoBST(root->right, val);
        return root;
    }
};
