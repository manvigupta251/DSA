class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(!root) return NULL;
        
        if(root->val > key){
            root->left = deleteNode(root->left, key);
        }
        else if(key > root->val) root->right = deleteNode(root->right, key);

        else{

            //0
            if(!root->left && !root->right){
                return NULL;
            }
            //1
            else if(!root->left){
                //root right exists
                TreeNode* temp = root->right;
                return temp;
            }
            else if(!root->right){
                //root left exist
                TreeNode* temp = root->left;
                return temp;
            }
            //2
            else{
                TreeNode* temp = root->right;
                while(temp->left != NULL){
                    temp = temp->left;
                }
                root->val = temp->val;
                root->right = deleteNode(root->right, temp->val);
            }
        }
        
        return root;
    }
};
